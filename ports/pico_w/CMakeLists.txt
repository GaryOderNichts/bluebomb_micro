cmake_minimum_required(VERSION 3.16)

# Set Board to Pico W, if not set
if (NOT PICO_BOARD)
    set(PICO_BOARD "pico_w")
endif()

# Use custom BTStack fork
set(PICO_BTSTACK_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../../external/btstack)

# Pull in SDK (must be before project)
include(pico_sdk_import.cmake)

set(CMAKE_C_STANDARD 11)
set(CMAKE_CXX_STANDARD 17)

project(bluebomb C CXX ASM)

# Check system value
include(${CMAKE_CURRENT_SOURCE_DIR}/../../cmake/l2cb.cmake)
if (NOT DEFINED BLUEBOMB_TARGET)
    message(SEND_ERROR "Missing BLUEBOMB_TARGET, available options are: ${BLUEBOMB_L2CB_LIST}")
endif()

# Generate the l2cb value
bluebomb_generate_l2cb(${BLUEBOMB_TARGET})

# Initialize the SDK
pico_sdk_init()

# For btstack config
include_directories(${CMAKE_CURRENT_LIST_DIR})

# Build bluebomb_micro
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/../../components/bluebomb_micro bluebomb_micro)

add_executable(bluebomb
    "main.c"

    # Generated by bluebomb_generate_l2cb
    "l2cb.c"
)

# Set output name to include target system
set_target_properties(bluebomb PROPERTIES
    OUTPUT_NAME "bluebomb_${BLUEBOMB_TARGET}"
)

# Link against bluebomb_micro code
target_link_libraries(bluebomb PRIVATE
    pico_stdlib
    bluebomb_micro
)

# Enable USB stdio, disable UART
pico_enable_stdio_usb(bluebomb 1)
pico_enable_stdio_uart(bluebomb 0)

pico_add_extra_outputs(bluebomb)

pico_set_program_name(bluebomb "bluebomb_micro")
pico_set_program_description(bluebomb "BlueBomb for embedded systems")
pico_set_program_url(bluebomb "https://github.com/GaryOderNichts/bluebomb_micro")
pico_set_program_version(bluebomb "1.1")
